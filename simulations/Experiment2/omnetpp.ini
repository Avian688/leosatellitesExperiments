##This the primary INI file of the network
##The following parameters define multiple satellite constellations that are tested throughout
##the final year project by Aiden Valentine.
[General]
network = LEOConstellation
sim-time-limit = 1201s
record-eventlog=false
cmdenv-event-banners = false
**.jitterSig:vector.vector-recording = true
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false

LEOConstellation.satellite[*].mobility.typename = "SatelliteMobility"
LEOConstellation.MCC[*].mobility.typename = "GroundStationMobility"

**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 2160m

**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 1080m

**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

## Routing settings
##parallel-simulation = false
##**.partition-id = 
*.*.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""
#
*.MCC[*].mobility.initFromDisplayString = false
*.MCC[*].mobility.updateFromDisplayString  = false
#
### MCC Settings - Sender Brighton
*.MCC[0].numApps = 1
*.MCC[0].app[0].typename = "UdpBasicApp"
*.MCC[0].app[0].startTime = 0s
*.MCC[0].app[0].stopTime = 1200s
*.MCC[0].app[0].destAddresses = "10.0.2.150"
*.MCC[0].app[0].messageLength = 1B
*.MCC[0].app[0].destPort = 80
*.MCC[0].app[0].sendInterval = 20s

### MCC Settings - Receiver Brighton
*.MCC[1].numApps = 1
*.MCC[1].app[0].typename = "UdpJitterSink"
*.MCC[1].app[0].localPort = 80
#
#
*.configurator.config = xml("<config><interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/><autoroute metric='propagationDelay'/></config>") #<autoroute metric='errorRate'/>
*.configurator.addStaticRoutes = true
*.configurator.optimizeRoutes = false

*.satellite[*].numWlanInterfaces = 1
*.*.wlan[*].typename = "AckingWirelessInterface"
#
*.MCC[*].wlan[*].radio.typename = "UnitDiskRadio"
*.MCC[*].wlan[*].radio.transmitter.typename = "SatelliteUnitDiskTransmitter" #Use the new transmitter model
*.MCC[*].wlan[*].radio.receiver.typename = "UnitDiskReceiver"
*.MCC[*].wlan[*].radio.receiver.ignoreInterference = true
*.MCC[*].wlan[*].radio.transmitter.communicationRange = 100m
*.MCC[*].wlan[*].radio.displayCommunicationRange = false

*.satellite[*].wlan[*].radio.typename = "UnitDiskRadio"
*.satellite[*].wlan[*].radio.transmitter.typename = "SatelliteUnitDiskTransmitter" #Use the new transmitter model
*.satellite[*].wlan[*].radio.receiver.typename = "UnitDiskReceiver"
*.satellite[*].wlan[*].radio.receiver.ignoreInterference = true
*.satellite[*].wlan[*].radio.transmitter.communicationRange = 100m
*.satellite[*].wlan[*].radio.displayCommunicationRange = false

*.*.wlan[*].mac.fullDuplex = true
*.*.wlan[*].mac.queue.packetCapacity = -1
*.*.forwarding = true
*.radioMedium.rangeFilter = "communicationRange"
*.radioMedium.propagation.typename = "SatellitePropagation"

**.**.ignorePartialInterference = true
*.satellite[*].**.bitrate = 100Mbps ##Bitrate is not important for simple latency experiments with small packet sizes.
*.MCC[*].**.bitrate = 100Mbps
#
*.radioMedium.typename = "UnitDiskRadioMedium" #UnitDiskRadioMedium #ApskScalarRadioMedium
*.radioMedium.propagation.propagationSpeed = 299792458 mps # speed of light in a vacuum

*.visualizer.dataLinkVisualizer.packetFilter = "*"
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.packetFilter = "*"##"UDPData*"
*.visualizer.routingTableVisualizer.destinationFilter = "*"#"satellite[125]"
*.visualizer.statisticVisualizer.sourceFilter = "**.app[*]"
*.visualizer.statisticVisualizer.signalName = "rtt"
*.visualizer.statisticVisualizer.unit = "s"

[Config Experiment1a]
description = "DC to Rio Streaming Application"
# Network parameters
LEOConstellation.satellite[*].mobility.updateInterval = 10s   # Interval to update the satellite positions on the map
LEOConstellation.configurator.updateInterval = 10s
**.numOfSats =660#1600#1207         # Number of satellites used in simulation. ATTENTION! Must be smaller or equal to number of satellites in choosen TLEfile
**.numOfMCCs = 2

# Parameters for Norad
*.satellite[*].NoradModule.satIndex = parentIndex()
*.satellite[*].NoradModule.satName = "sat"
*.satellite[*].NoradModule.planes = 12
*.satellite[*].NoradModule.satPerPlane = 66

*.MCC[0].mobility.latitude = 38.9072
*.MCC[0].mobility.longitude = -77.0369
*.MCC[0].cityName = "Washington DC"

*.MCC[1].mobility.latitude = -22.9128
*.MCC[1].mobility.longitude = -43.1729
*.MCC[1].cityName = "Rio"

*.configurator.enableInterSatelliteLinks = true

[Config Experiment1b]
description = "DC to Rio Streaming Application - 10ms granularity"
extends = Experiment1a

LEOConstellation.satellite[*].mobility.updateInterval = 10ms   # Interval to update the satellite positions on the map
LEOConstellation.configurator.updateInterval = 10ms

[Config Experiment1c]
description = "DC to Rio Streaming Application - 25ms granularity"
extends = Experiment1a

LEOConstellation.satellite[*].mobility.updateInterval = 25ms   # Interval to update the satellite positions on the map
LEOConstellation.configurator.updateInterval = 25ms

[Config Experiment1d]
description = "DC to Rio Streaming Application - 50ms granularity"
extends = Experiment1a

LEOConstellation.satellite[*].mobility.updateInterval = 50ms   # Interval to update the satellite positions on the map
LEOConstellation.configurator.updateInterval = 50ms

[Config Experiment1e]
description = "DC to Rio Streaming Application - 100ms granularity"
extends = Experiment1a

LEOConstellation.satellite[*].mobility.updateInterval = 100ms   # Interval to update the satellite positions on the map
LEOConstellation.configurator.updateInterval = 100ms

[Config Experiment1f]
description = "DC to Rio Streaming Application - 500ms granularity"
extends = Experiment1a

LEOConstellation.satellite[*].mobility.updateInterval = 500ms   # Interval to update the satellite positions on the map
LEOConstellation.configurator.updateInterval = 500ms

[Config Experiment1g]
description = "DC to Rio Streaming Application - 1s granularity"
extends = Experiment1a

LEOConstellation.satellite[*].mobility.updateInterval = 1s   # Interval to update the satellite positions on the map
LEOConstellation.configurator.updateInterval = 1s

