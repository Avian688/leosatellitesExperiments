##This the primary INI file of the network
##The following parameters define multiple satellite constellations that are tested throughout
##the final year project by Aiden Valentine.
[General]
network = ManhattanStatic2

record-eventlog=false
cmdenv-event-banners = false
**.app[*].packetReceived:vector(packetBytes).vector-recording = true
**.app[*].packetReceived:sum(packetBytes).scalar-recording = true
**.app[*].packetReceived:count.scalar-recording = true
**.app[*].goodput:last.scalar-recording = true 
**.app[*].mohThroughputNDP:last.scalar-recording = true 
**.app[*].mohThroughput:last.scalar-recording = true 
**.app[*].instThroughput:mean.scalar-recording = true
**.app[*].instThroughput:vector.vector-recording = true
**.app[*].instThroughputNDP:mean.scalar-recording = true
**.app[*].instThroughputNDP:vector.vector-recording = true
**.app[*].numRcvTrimmedHeaderSigNdp:last.scalar-recording = true 
**.app[*].fctRecordv3:last.scalar-recording = true
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false
**.MCC[*].mobility.typename = "GroundStationMobility"
## Routing settings
##parallel-simulation = false
##**.partition-id = 
**.netmaskRoutes = ""
#
#*.configurator.config = xml("<config><interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/><autoroute metric='propagationDelay'/></config>") #<autoroute metric='errorRate'/>
*.configurator.addStaticRoutes = true
*.configurator.optimizeRoutes = false

*.*.forwarding = true

#*.satellite[*].**.bitrate = 1Gbps ##Bitrate is not important for simple latency experiments with small packet sizes.

#*.visualizer.dataLinkVisualizer.packetFilter = "*"
#*.visualizer.networkRouteVisualizer.displayRoutes = true
#*.visualizer.networkRouteVisualizer.packetFilter = "*"##"UDPData*"
#*.visualizer.routingTableVisualizer.destinationFilter = "*"#"satellite[125]"
#*.visualizer.statisticVisualizer.sourceFilter = "**.app[*]"
#*.visualizer.statisticVisualizer.signalName = "rtt"
#*.visualizer.statisticVisualizer.unit = "s"

[Config Experiment1]
description = "NDP"
**.ndp.typename = "Ndp"
**.ndp.ndpAlgorithmClass = "DumbNdp"
**.satellite[265].groundStation[1].numApps =1

**.satellite[295].groundStation[0].numApps =1


#**.app[0].typename = "NdpBasicClientApp"
**.satellite[265].groundStation[1].app[0].typename = "NdpBasicClientApp"
**.satellite[265].groundStation[1].app[0].connectAddress = "satellite[295].groundStation[0]"  #make sure intial values are correct
**.satellite[265].groundStation[1].app[0].localAddress = "satellite[265].groundStation[1]"

**.satellite[*].groundStation[*].app[*].connectPort = 80
**.satellite[*].groundStation[*].app[*].startTime =0s
**.satellite[*].groundStation[*].app[*].numPacketsToSend = 8040

**.satellite[295].groundStation[0].app[0].typename  = "NdpSinkApp"
**.satellite[295].groundStation[0].app[0].localAddress = "satellite[295].groundStation[0]"
**.satellite[*].groundStation[*].app[*].localPort = 80


# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )
**.satellite[*].groundStation[*].ppp[*].ppp.queue.typename = "PacketQueue" # in routers DropTailQueue NDPQueue
**.satellite[*].groundStation[*].ppp[*].ppp.queue.packetCapacity = -1 

**.ppp[*].ppp.queue.typename = "NdpSwitchQueue" # in routers DropTailQueue NDPQueue
**.ppp[*].ppp.queue.packetCapacity = 500
# Network parameters
**.numOfSats =1024#1600#1207         # Number of satellites used in simulation. ATTENTION! Must be smaller or equal to number of satellites in choosen TLEfile
**.numOfGS = 2

**.initialWindow = ${initialWindow=804}

**.perPacketEcmp = true
**.perFlowEcmp = false
