##This the primary INI file of the network
##The following parameters define multiple satellite constellations that are tested throughout
##the final year project by Aiden Valentine.
[General]
network = ManhattanStatic
record-eventlog=false
#FatTreeNdp.Pod[3].racks[1].servers[0].app[2].module-eventlog-recording = true
**.module-eventlog-recording = false
debug-on-errors = false
cmdenv-express-mode = false
cmdenv-log-prefix = %t | %m |
cmdenv-event-banners = false
#FatTreeNdp.Pod[2].racks[1].servers[1].ndp.cmdenv-log-level = trace
#FatTreeNdp.Pod[3].racks[1].servers[0].ndp.conn-136.cmdenv-log-level = info
#FatTreeNdp.Pod[3].racks[1].servers[0].app[2].cmdenv-log-level = info

#FatTreeNdp.Pod[2].racks[1].servers[1].ndp.conn-137.cmdenv-log-level = info
#FatTreeNdp.Pod[2].racks[1].servers[1].app[0].cmdenv-log-level = info

**.satellite[295].groundStation[0].ndp.conn-10278.cmdenv-log-level = off#info
**.satellite[295].groundStation[0].app[0].cmdenv-log-level = off#info
**.cmdenv-log-level = off
cmdenv-redirect-output = false
cmdenv-output-file = senderLog.txt
#cmdenv-express-mode = true
cmdenv-performance-display = true
#*.visualizer.displayRoutingTables = true
**.statistic-recording=true


**.app[*].packetReceived:vector(packetBytes).vector-recording = true
**.app[*].packetReceived:sum(packetBytes).scalar-recording = true
**.app[*].packetReceived:count.scalar-recording = true
**.app[*].goodput:last.scalar-recording = true 
**.app[*].mohThroughputNDP:last.scalar-recording = true 
**.app[*].mohThroughput:last.scalar-recording = true 
**.app[*].instThroughput:mean.scalar-recording = true
**.app[*].instThroughput:vector.vector-recording = true
**.app[*].instThroughputNDP:mean.scalar-recording = true
**.app[*].instThroughputNDP:vector.vector-recording = true
**.app[*].numRcvTrimmedHeaderSigNdp:last.scalar-recording = true 
**.cwnd:vector.vector-recording = true
**.app[*].fctRecordv3:last.scalar-recording = true
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false
**.MCC[*].mobility.typename = "GroundStationMobility"
## Routing settings
##parallel-simulation = false
##**.partition-id = 
**.netmaskRoutes = ""
#

#*.configurator.config = xml("<config><interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/><autoroute metric='propagationDelay'/></config>") #<autoroute metric='errorRate'/>
*.configurator.addStaticRoutes = true
*.configurator.optimizeRoutes = false

*.*.forwarding = true

#*.satellite[*].**.bitrate = 1Gbps ##Bitrate is not important for simple latency experiments with small packet sizes.

#*.visualizer.dataLinkVisualizer.packetFilter = "*"
#*.visualizer.networkRouteVisualizer.displayRoutes = true
#*.visualizer.networkRouteVisualizer.packetFilter = "*"##"UDPData*"
#*.visualizer.routingTableVisualizer.destinationFilter = "*"#"satellite[125]"
#*.visualizer.statisticVisualizer.sourceFilter = "**.app[*]"
#*.visualizer.statisticVisualizer.signalName = "rtt"
#*.visualizer.statisticVisualizer.unit = "s"

[Config Experiment1]
description = "TCP"
*.satellite[*].numApps = 1
*.satellite[*].app[0].typename = "TcpSessionApp"
*.satellite[*].app[0].connectAddress = "satellite[*]"
*.satellite[*].app[0].tOpen = 0s
*.satellite[*].app[0].tSend = 0s
*.satellite[*].app[0].sendBytes = 70 kB
*.satellite[*].tcp.typename = "Tcp"
*.satellite[*].tcp.mss = 1000

#*.satellite[55].numApps = 1
#*.satellite[55].app[0].typename = "TcpSinkApp"
#*.satellite[55].app[0].localPort = 1000
*.visualizer.networkRouteVisualizer.displayRoutes = true

**.satellite[*].ppp[*].ppp.queue.typename = "DropTailQueue"
**.satellite[*].ppp[*].ppp.queue.packetCapacity = 40

# Network parameters
**.numOfSats =25#1600#1207         # Number of satellites used in simulation. ATTENTION! Must be smaller or equal to number of satellites in choosen TLEfile
**.trafficMatrixType = ${"permTM"}  #randTM permTM
**.arrivalRate = 2000
**.shuffle = true
**.flowSize = 250
**.numShortFlows = 1000
**.longFlowSize = 10000
**.percentLongFlowNodes = 0.7
**.IW = 15
**.switchQueueLength = 8
**.isWebSearchWorkLoad = false 
**.perPacketEcmp = false
**.perFlowEcmp = true
**.seedValue = 1111
**.randomGroup= true
**.numOfNodes = numOfSats

**.transportProtocol = "tcp"
**.clientAppType = "SessionApp"
**.receiverAppType = "SinkApp"

[Config Experiment2]
description = "NDP"
**.satellite[*].groundStation[*].numApps =1
#**.app[0].typename = "NdpBasicClientApp"
**.satellite[*].groundStation[*].app[0].typename = "NdpBasicClientApp"
**.satellite[*].groundStation[*].app[0].connectAddress = "satellite[*].groundStation"  #make sure intial values are correct
**.satellite[*].groundStation[*].app[0].connectPort = 80
**.satellite[*].groundStation[*].app[0].startTime =50s
**.satellite[*].groundStation[*].app[0].numPacketsToSend = 50
**.ndp.typename = "Ndp"
**.ndp.ndpAlgorithmClass = "DumbNdp"

# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )
#**.satellite[*].groundStation[*].ppp[*].ppp.queue.typename = "PacketQueue" # in routers DropTailQueue NDPQueue
#**.satellite[*].groundStation[*].ppp[*].ppp.queue.packetCapacity = -1 

**.ppp[*].ppp.queue.typename = "NdpSwitchQueue" # in routers DropTailQueue NDPQueue
**.ppp[*].ppp.queue.packetCapacity = 50 #${30..30 step 1}  # in routers

# Network parameters
**.numOfSats =900#1600#1207         # Number of satellites used in simulation. ATTENTION! Must be smaller or equal to number of satellites in choosen TLEfile
**.numOfGS = 2
**.trafficMatrixType = ${"randTM"}  #randTM permTM
**.arrivalRate = 1000
**.shuffle = true
#**.flowSize = 25000
**.flowSize = 20000
**.numShortFlows = 50
**.longFlowSize = 10000
**.percentLongFlowNodes = 0
**.initialWindow = ${initialWindow=0..5000 step 1}
**.IW = ${initialWindow}
**.numOfHops = 0
#**.initialWindow = 2500
#**.IW = 2500
**.switchQueueLength = 50
**.isWebSearchWorkLoad = false 
**.perPacketEcmp = true
**.perFlowEcmp = false
**.seedValue = 2222
**.randomGroup= true
**.numOfNodes = numOfSats

**.transportProtocol = "ndp"
**.clientAppType = "BasicClientApp"
**.receiverAppType = "SinkApp"

[Config Experiment3]
description = "RDP"
**.satellite[*].groundStation[*].numApps =1
#**.app[0].typename = "NdpBasicClientApp"
**.satellite[*].groundStation[*].app[0].typename = "RdpBasicClientApp"
**.satellite[*].groundStation[*].app[0].connectAddress = "satellite[*].groundStation"  #make sure intial values are correct
**.satellite[*].groundStation[*].app[0].connectPort = 80
**.satellite[*].groundStation[*].app[0].startTime =50s
**.satellite[*].groundStation[*].app[0].numPacketsToSend = 50
**.rdp.typename = "Rdp"
**.rdp.rdpAlgorithmClass = "DumbRdp"

# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )
#**.satellite[*].groundStation[*].ppp[*].ppp.queue.typename = "PacketQueue" # in routers DropTailQueue NDPQueue
#**.satellite[*].groundStation[*].ppp[*].ppp.queue.packetCapacity = -1 

**.ppp[*].ppp.queue.typename = "RdpSwitchQueue" # in routers DropTailQueue NDPQueue
**.ppp[*].ppp.queue.packetCapacity = 350 #${30..30 step 1}  # in routers

# Network parameters
**.numOfSats =900#1600#1207         # Number of satellites used in simulation. ATTENTION! Must be smaller or equal to number of satellites in choosen TLEfile
**.numOfGS = 2
**.trafficMatrixType = ${"randTM"}  #randTM permTM
**.arrivalRate = 1000
**.shuffle = true
#**.flowSize = 25000
**.flowSize = 60000
**.numShortFlows = 50
**.longFlowSize = 10000
**.percentLongFlowNodes = 0
**.initialWindow = ${initialWindow=0..5000 step 1}
**.IW = ${initialWindow}
**.numOfHops = 5
**.ssthresh = 0000
**.additiveIncreasePackets = 25
#**.initialWindow = 2500
#**.IW = 2500
**.switchQueueLength = 50
**.isWebSearchWorkLoad = false 
**.perPacketEcmp = true
**.perFlowEcmp = false
**.seedValue = 2222
**.randomGroup= true
**.numOfNodes = numOfSats

**.transportProtocol = "rdp"
**.clientAppType = "BasicClientApp"
**.receiverAppType = "SinkApp"

[Config Experiment4]
description = "RaQSaC"
**.satellite[*].groundStation.numApps =1
#**.app[0].typename = "NdpBasicClientApp"
**.satellite[*].groundStation.app[0].typename = "RaqsacBasicClientApp"
**.satellite[*].groundStation.app[0].connectAddress = "satellite[*].groundStation"  #make sure intial values are correct
**.satellite[*].groundStation.app[0].connectPort = 80
**.satellite[*].groundStation.app[0].startTime =50s
**.satellite[*].groundStation.app[0].numSymbolsToSend = 50
**.raqsac.typename = "Raqsac"
**.raqsac.raqsacAlgorithmClass = "DumbRaqsac"

# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )
**.satellite[*].groundStation.ppp[*].ppp.queue.typename = "PacketQueue" # in routers DropTailQueue NDPQueue
**.satellite[*].groundStation.ppp[*].ppp.queue.packetCapacity = -1 #${30..30 step 1}  # in routers

**.satellite[*].switch.ppp[*].ppp.queue.typename = "RaqsacSwitchQueue" # in routers DropTailQueue NDPQueue
**.satellite[*].switch.ppp[*].ppp.queue.packetCapacity = 800 #${30..30 step 1}  # in routers

# Network parameters
**.numOfSats =25#1600#1207         # Number of satellites used in simulation. ATTENTION! Must be smaller or equal to number of satellites in choosen TLEfile
**.trafficMatrixType = ${"randTM"}  #randTM permTM
**.arrivalRate = 2000
**.shuffle = true
**.flowSize = 120
**.numShortFlows = 10
**.longFlowSize = 10000
**.percentLongFlowNodes = 0.4
**.initialWindow = 5
**.IW = 5
**.switchQueueLength = 8
**.isWebSearchWorkLoad = false 
**.perPacketEcmp = true
**.perFlowEcmp = false
**.seedValue = 1111
**.randomGroup= true
**.numOfNodes = numOfSats

**.transportProtocol = "raqsac"
**.clientAppType = "BasicClientApp"
**.receiverAppType = "SinkApp"